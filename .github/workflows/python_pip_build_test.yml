name: pip builds 

on: 
  push



jobs:
  build_with_pip:
    name: ${{matrix.os}} build with pip (${{ matrix.python-version }})

    strategy:
      fail-fast: false
      matrix:
        os: [ 'macos-latest', 'ubuntu-latest', 'windows-latest']
        python-version: ['2.7', '3.7', '3.8']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout  
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install gfortran (ubuntu)
        if: matrix.os == 'ubuntu-latest' 
        run: |
          sudo apt-get install -y gfortran

      - name: Install gfortran (macos)
        if: matrix.os == 'macos-latest' 
        run: |
          brew cask install gfortran

      # - name: Install fortran (windows)
      #   if: matrix.os == 'windows-latest'
      #   uses: numworks/setup-msys2@v1
      - name: Install msys2 (windows)
        if: steps.cache-msys2.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'
        run: |
          if ( "${{ matrix.arch }}" -eq "32" ) {
            (New-Object net.webclient).DownloadFile("http://repo.msys2.org/distrib/i686/msys2-base-i686-20190524.tar.xz","msys2.tar.xz")
          } else {
            (New-Object net.webclient).DownloadFile("http://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20190524.tar.xz","msys2.tar.xz")
          }
          tar xf msys2.tar.xz -C $env:GITHUB_WORKSPACE.Replace("\", "/")
      - run: |
          $env:MSYSTEM = "MINGW${{ matrix.arch }}"
          $env:MSYS2_PATH_TYPE = "strict"
          $script = @'
            uname -m
            uname -a
            echo $PATH
          '@
          & "$env:GITHUB_WORKSPACE\msys${{ matrix.arch }}\usr\bin\bash" -c -l $script

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy 
          pip install scipy 
          pip install Cython
          
      - name: Install (self)
        run: |
          pip install -e . 
          
      - name: Test with pytest
        run: |
          pip install pytest
          pytest


        